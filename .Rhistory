paste0(eq$coin[i], "EUR")
i <-1
# Get your balance in coins
equity <- get_balance(url = "https://api.kraken.com/0/private/Balance",
key = API_Key,
secret = API_Sign)
equity
eq <- data.frame(balance = unlist(equity$result))
eq$coin <- rownames(eq)
rownames(eq) <- NULL
# remove currencies
currency <- c("ZEUR", "CHF", "USDT")
eq <- eq[!eq$coin %in% currency, ]
eq
# Match coins to euro pairs to get equity
avail_pairs <- myfun("https://api.kraken.com/0/public/AssetPairs", secret = API_Sign, key = API_Key)
avail_pairs <- names(avail_pairs$result)
avail_pairs
paste0(eq$coin[i], "EUR")
myStr
paste0(eq$coin[i], "EUR")
for (i in 1:nrow(eq)){
for (j in 1:length(length(avail_pairs))){
print(str_detect(paste0(eq$coin[i], "EUR"), avail_pairs[j]))
}
}
1:nrow(eq)
i <-1
j <-1
paste0(eq$coin[i], "EUR")
avail_pairs[j]
print(str_detect(paste0(eq$coin[i], "EUR"), avail_pairs[j]))
for (i in 1:nrow(eq)){
for (j in 1:length(avail_pairs)){
print(str_detect(paste0(eq$coin[i], "EUR"), avail_pairs[j]))
}
}
str_detect(paste0(eq$coin[i], "EUR"), avail_pairs[j])
1:length(avail_pairs)
avail_pairs
match <- list()
match <- list()
for (i in 1:nrow(eq)){
for (j in 1:length(avail_pairs)){
cond <- str_detect(paste0(eq$coin[i], "EUR"), avail_pairs[j])
if(cond) {
match[[i]] <- paste0(eq$coin[i], avail_pairs[j])
}
}
}
match
match <- list()
for (i in 1:nrow(eq)){
for (j in 1:length(avail_pairs)){
cond <- str_detect(paste0(eq$coin[i], "EUR"), avail_pairs[j])
if(cond) {
match[[i]] <- paste(eq$coin[i], avail_pairs[j], sep = " ")
}
}
}
match
1
i <-1
eq$coin
paste0(eq$coin[i], "EUR")
# Get your balance in coins
equity <- get_balance(url = "https://api.kraken.com/0/private/Balance",
key = API_Key,
secret = API_Sign)
eq <- data.frame(balance = unlist(equity$result))
eq$coin <- rownames(eq)
rownames(eq) <- NULL
# remove currencies
currency <- c("ZEUR", "CHF", "USDT")
eq <- eq[!eq$coin %in% currency, ]
eq
# Match coins to euro pairs to get equity
avail_pairs <- myfun("https://api.kraken.com/0/public/AssetPairs", secret = API_Sign, key = API_Key)
avail_pairs <- names(avail_pairs$result)
eq$coin[1]
eq$coin[1] %in% avail_pairs
avail_pairs
grep(eq$coin[1], avail_pairs)
grep(eq$coin[1], avail_pairs, value = T)
grep("EUR", grep(eq$coin[1], avail_pairs, value = T))
grep("EUR", grep(eq$coin[1], avail_pairs, value = T), value = T)
grep("EUR", grep(eq$coin[1], avail_pairs, value = T), value = T)[1]
eq
eq$pair <- NA
for(i in 1:nrow(eq)){
eq$pair[i] <- grep("EUR", grep(eq$coin[i], avail_pairs, value = T), value = T)[1]
}
eq
i <-13
for (i in 1:length(eq$pair)){
url <- paste0('https://api.kraken.com/0/public/Ticker?pair=', mypairs[i])
dat <- jsonlite::fromJSON(url)
print(unlist(dat$result)[7])
Sys.sleep(5)
}
eq$pair
eq
i <- 1
url <- paste0('https://api.kraken.com/0/public/Ticker?pair=', eq$pair[i])
url
dat <- jsonlite::fromJSON(url)
unlist(dat$result)[7]
eq
eq$last_price <- NA
# Get last trade price for each ticker
for (i in 1:length(eq$pair)){
url <- paste0('https://api.kraken.com/0/public/Ticker?pair=', eq$pair[i])
dat <- jsonlite::fromJSON(url)
eq$last_price[i] <- unlist(dat$result)[7]
Sys.sleep(5)
}
eq
eq$date_time <- NA
Sys.time()
# Get last trade price for each ticker
for (i in 1:length(eq$pair)){
url <- paste0('https://api.kraken.com/0/public/Ticker?pair=', eq$pair[i])
dat <- jsonlite::fromJSON(url)
eq$last_price[i] <- unlist(dat$result)[7]
eq$date_time <- Sys.time()
Sys.sleep(3)
print(i)
}
eq
# Report path
path <- "/media/chris/DATA/Documents/Bot_Trading/equity_report"
# Report path
path <- "/media/chris/DATA/Documents/Bot_Trading/equity_report/"
# Extract as a csv
write.csv(eq, file = paste0(path, "equity_report.csv"), append = T)
# Extract as a csv
write.csv(eq, file = paste0(path, "equity_report.csv"), append = T,
row.names = F)
path <- "/media/chris/DATA/Documents/Bot_Trading/equity_report/"
# Get your balance in coins
equity <- get_balance(url = "https://api.kraken.com/0/private/Balance",
key = API_Key,
secret = API_Sign)
eq <- data.frame(balance = unlist(equity$result))
eq$coin <- rownames(eq)
rownames(eq) <- NULL
# remove currencies
currency <- c("ZEUR", "CHF", "USDT")
eq <- eq[!eq$coin %in% currency, ]
eq$pair <- NA
eq$last_price <- NA
eq$date_time <- NA
# Match coins to euro pairs to get equity
avail_pairs <- myfun("https://api.kraken.com/0/public/AssetPairs", secret = API_Sign, key = API_Key)
avail_pairs <- names(avail_pairs$result)
# Get the official ticker
for(i in 1:nrow(eq)){
eq$pair[i] <- grep("EUR", grep(eq$coin[i], avail_pairs, value = T), value = T)[1]
}
# Get last trade price for each ticker
for (i in 1:length(eq$pair)){
url <- paste0('https://api.kraken.com/0/public/Ticker?pair=', eq$pair[i])
dat <- jsonlite::fromJSON(url)
eq$last_price[i] <- unlist(dat$result)[7]
eq$date_time <- Sys.time()
Sys.sleep(3)
print(i)
}
# Extract as a csv
write.csv(eq, file = paste0(path, "equity_report.csv"), append = T,
row.names = F)
?write.csv
# Extract as a csv
write.csv(eq, file = paste0(path, "equity_report.csv"), append = T,
row.names = F)
# Extract as a csv
write.table(eq, file = paste0(path, "equity_report.csv"), append = T,
row.names = F)
eq
?write.table
# Extract as a csv
write.table(eq, file = paste0(path, "equity_report.csv"), append = T,
row.names = F, sep = ",")
# Extract as a csv
write.table(eq, file = paste0(path, "equity_report.csv"), append = T,
row.names = F, sep = ",")
# Report path
path <- "/media/chris/DATA/Documents/Bot_Trading/equity_report/"
# Get your balance in coins
equity <- get_balance(url = "https://api.kraken.com/0/private/Balance",
key = API_Key,
secret = API_Sign)
eq <- data.frame(balance = unlist(equity$result))
eq$coin <- rownames(eq)
rownames(eq) <- NULL
# remove currencies
currency <- c("ZEUR", "CHF", "USDT")
eq <- eq[!eq$coin %in% currency, ]
eq$pair <- NA
eq$last_price <- NA
eq$date_time <- NA
# Match coins to euro pairs to get equity
avail_pairs <- myfun("https://api.kraken.com/0/public/AssetPairs", secret = API_Sign, key = API_Key)
avail_pairs <- names(avail_pairs$result)
# Get the official ticker
for(i in 1:nrow(eq)){
eq$pair[i] <- grep("EUR", grep(eq$coin[i], avail_pairs, value = T), value = T)[1]
}
# Get last trade price for each ticker
for (i in 1:length(eq$pair)){
url <- paste0('https://api.kraken.com/0/public/Ticker?pair=', eq$pair[i])
dat <- jsonlite::fromJSON(url)
eq$last_price[i] <- unlist(dat$result)[7]
eq$date_time <- Sys.time()
Sys.sleep(3)
print(i)
}
# Extract as a csv
write.table(eq, file = paste0(path, "equity_report.csv"), append = T,
row.names = F, sep = ",")
# Report path
path <- "/media/chris/DATA/Documents/Bot_Trading/equity_report/"
# Get your balance in coins
equity <- get_balance(url = "https://api.kraken.com/0/private/Balance",
key = API_Key,
secret = API_Sign)
eq <- data.frame(balance = unlist(equity$result))
eq$coin <- rownames(eq)
rownames(eq) <- NULL
# remove currencies
currency <- c("ZEUR", "CHF", "USDT")
eq <- eq[!eq$coin %in% currency, ]
eq$pair <- NA
eq$last_price <- NA
eq$date_time <- NA
# Match coins to euro pairs to get equity
avail_pairs <- myfun("https://api.kraken.com/0/public/AssetPairs", secret = API_Sign, key = API_Key)
avail_pairs <- names(avail_pairs$result)
# Get the official ticker
for(i in 1:nrow(eq)){
eq$pair[i] <- grep("EUR", grep(eq$coin[i], avail_pairs, value = T), value = T)[1]
}
# Get last trade price for each ticker
for (i in 1:length(eq$pair)){
url <- paste0('https://api.kraken.com/0/public/Ticker?pair=', eq$pair[i])
dat <- jsonlite::fromJSON(url)
eq$last_price[i] <- unlist(dat$result)[7]
eq$date_time <- Sys.time()
Sys.sleep(3)
print(i)
}
# Extract as a csv
write.table(eq, file = paste0(path, "equity_report.csv"), append = T,
row.names = F, sep = ",")
list.files(path, full.names = T)
read.table(list.files(path, full.names = T))
read.csv(list.files(path, full.names = T))
eq <- read.csv(list.files(path, full.names = T))
eq
eq <- eq[eq$balance == "balance"]
eq$balance == "balance"
eq <- eq[eq$balance != "balance", ]
eq
pairs <- unique(eq$pair)
pairs
eq_1 <- subset(eq, eq$pair == pairs[1])
eq_1
eq_1$equity <- eq_1$balance*eq_1$last_price
eq_1$balance
eq_1$last_price
# Report path
path <- "/media/chris/DATA/Documents/Bot_Trading/equity_report/"
eq <- read.csv(list.files(path, full.names = T))
eq <- eq[eq$balance != "balance", ]
eq
eq$balance <- as.numeric(eq$balance)
eq$last_price <- as.numeric(eq$last_price)
pairs <- unique(eq$pair)
pairs
eq_1 <- subset(eq, eq$pair == pairs[1])
eq_1$equity <- eq_1$balance * eq_1$last_price
eq_1
ggplot(data = eq_1, aes(x = date_time, y = equity))
ggplot(data = eq_1, aes(x = date_time, y = equity))+
geom_line()
ggplot(data = eq_1, aes(x = date_time, y = equity))+
geom_line
ggplot(data = eq_1, aes(x = date_time, y = equity))+
geom_line()
ggplot(data = eq_1)+
geom_line(, aes(x = date_time, y = equity))
ggplot(data = eq_1)+
geom_line(aes(x = date_time, y = equity))
ggplot(data = eq_1)+
geom_line(x = date_time, y = equity)
?ggplot
ggplot(data = eq_1, aes(x = date_time, y = equity))+
geom_line()
ggplot(data = eq_1, aes(x = date_time, y = equity))+
geom_point()
eq_1
# Report path
path <- "/media/chris/DATA/Documents/Bot_Trading/equity_report/"
# Get your balance in coins
equity <- get_balance(url = "https://api.kraken.com/0/private/Balance",
key = API_Key,
secret = API_Sign)
eq <- data.frame(balance = unlist(equity$result))
eq$coin <- rownames(eq)
rownames(eq) <- NULL
# remove currencies
currency <- c("ZEUR", "CHF", "USDT")
eq <- eq[!eq$coin %in% currency, ]
eq$pair <- NA
eq$last_price <- NA
eq$date_time <- NA
# Match coins to euro pairs to get equity
avail_pairs <- myfun("https://api.kraken.com/0/public/AssetPairs", secret = API_Sign, key = API_Key)
avail_pairs <- names(avail_pairs$result)
# Get the official ticker
for(i in 1:nrow(eq)){
eq$pair[i] <- grep("EUR", grep(eq$coin[i], avail_pairs, value = T), value = T)[1]
}
# Get last trade price for each ticker
for (i in 1:length(eq$pair)){
url <- paste0('https://api.kraken.com/0/public/Ticker?pair=', eq$pair[i])
dat <- jsonlite::fromJSON(url)
eq$last_price[i] <- unlist(dat$result)[7]
eq$date_time <- Sys.time()
Sys.sleep(3)
print(i)
}
# Extract as a csv
write.table(eq, file = paste0(path, "equity_report.csv"), append = T,
row.names = F, sep = ",")
# Report path
path <- "/media/chris/DATA/Documents/Bot_Trading/equity_report/"
eq <- read.csv(list.files(path, full.names = T))
eq <- eq[eq$balance != "balance", ]
eq$balance <- as.numeric(eq$balance)
eq$last_price <- as.numeric(eq$last_price)
pairs <- unique(eq$pair)
eq_1 <- subset(eq, eq$pair == pairs[1])
eq_1$equity <- eq_1$balance * eq_1$last_price
ggplot(data = eq_1, aes(x = date_time, y = equity))+
geom_point()
ggplot(data = eq_1, aes(x = date_time, y = equity))+
geom_line()
ggplot(data = eq_1, aes(x = date_time, y = equity))+
geom_line()
ggplot(data = eq_1, aes(x = date_time, y = equity))+
geom_line(alpha = 0.5)
ggplot(data = eq_1, aes(x = date_time, y = equity))+
geom_point()+
geom_line(alpha = 0.5)
eq_1$date_time
class(eq_1$date_time)
eq$date_time <- as.Date(eq$date_time)
eq$date_time
eq_1 <- subset(eq, eq$pair == pairs[1])
eq_1$equity <- eq_1$balance * eq_1$last_price
ggplot(data = eq_1, aes(x = date_time, y = equity))+
geom_point()+
geom_line(alpha = 0.5)
as.POSIXct(eq$date_time)
eq$date_time <- as.POSIXct(eq$date_time)
eq$date_time
# Report path
path <- "/media/chris/DATA/Documents/Bot_Trading/equity_report/"
eq <- read.csv(list.files(path, full.names = T))
eq <- eq[eq$balance != "balance", ]
eq$balance <- as.numeric(eq$balance)
eq$last_price <- as.numeric(eq$last_price)
eq$date_time <- as.POSIXct(eq$date_time)
eq$date_time
pairs <- unique(eq$pair)
eq_1 <- subset(eq, eq$pair == pairs[1])
eq_1$equity <- eq_1$balance * eq_1$last_price
ggplot(data = eq_1, aes(x = date_time, y = equity))+
geom_point()+
geom_line(alpha = 0.5)
# Report path
path <- "/media/chris/DATA/Documents/Bot_Trading/equity_report/"
eq <- read.csv(list.files(path, full.names = T))
eq <- eq[eq$balance != "balance", ]
eq$balance <- as.numeric(eq$balance)
eq$last_price <- as.numeric(eq$last_price)
eq$date_time <- as.POSIXct(eq$date_time)
pairs <- unique(eq$pair)
eq
ggplot(data = eq_1, aes(x = date_time, y = equity))+
geom_point()+
geom_line(alpha = 0.5) +
facet_wrap(~pair)
ggplot(data = eq, aes(x = date_time, y = equity))+
geom_point()+
geom_line(alpha = 0.5) +
facet_wrap(~pair)
eq
ggplot(data = eq, aes(x = date_time, y = equity))+
geom_point()+
geom_line(alpha = 0.5) +
facet_wrap(~coin)
eq$equity <- eq$balance * eq$last_price
ggplot(data = eq, aes(x = date_time, y = equity))+
geom_point()+
geom_line(alpha = 0.5) +
facet_wrap(~coin)
# Report path
path <- "/media/chris/DATA/Documents/Bot_Trading/equity_report/"
eq <- read.csv(list.files(path, full.names = T))
eq <- eq[eq$balance != "balance", ]
eq$balance <- as.numeric(eq$balance)
eq$last_price <- as.numeric(eq$last_price)
eq$date_time <- as.POSIXct(eq$date_time)
pairs <- unique(eq$pair)
eq$equity <- eq$balance * eq$last_price
eq$equity
eq
ggplot(data = eq, aes(x = date_time, y = equity))+
geom_point()+
geom_line(alpha = 0.5) +
facet_wrap(~coin, scales = "free_x")
ggplot(data = eq, aes(x = date_time, y = equity))+
geom_point()+
geom_line(alpha = 0.5) +
facet_wrap(~coin, scales = "free_y")
# Report path
path <- "/media/chris/DATA/Documents/Bot_Trading/equity_report/"
eq <- read.csv(list.files(path, full.names = T))
eq <- eq[eq$balance != "balance", ]
eq$balance <- as.numeric(eq$balance)
eq$last_price <- as.numeric(eq$last_price)
eq$date_time <- as.POSIXct(eq$date_time)
pairs <- unique(eq$pair)
eq$equity <- eq$balance * eq$last_price
eq
eqc <- subset(eq, eq$equity >= 1)
eq <- subset(eq, eq$equity >= 1)
eq
ggplot(data = eq, aes(x = date_time, y = equity))+
geom_point()+
geom_line(alpha = 0.5) +
facet_wrap(~coin, scales = "free_y")
# Report path
path <- "/media/chris/DATA/Documents/Bot_Trading/equity_report/"
# Get your balance in coins
equity <- get_balance(url = "https://api.kraken.com/0/private/Balance",
key = API_Key,
secret = API_Sign)
eq <- data.frame(balance = unlist(equity$result))
eq$coin <- rownames(eq)
rownames(eq) <- NULL
# remove currencies
currency <- c("ZEUR", "CHF", "USDT")
eq <- eq[!eq$coin %in% currency, ]
eq$pair <- NA
eq$last_price <- NA
eq$date_time <- NA
# Match coins to euro pairs to get equity
avail_pairs <- myfun("https://api.kraken.com/0/public/AssetPairs", secret = API_Sign, key = API_Key)
avail_pairs <- names(avail_pairs$result)
# Get the official ticker
for(i in 1:nrow(eq)){
eq$pair[i] <- grep("EUR", grep(eq$coin[i], avail_pairs, value = T), value = T)[1]
}
# Get last trade price for each ticker
for (i in 1:length(eq$pair)){
url <- paste0('https://api.kraken.com/0/public/Ticker?pair=', eq$pair[i])
dat <- jsonlite::fromJSON(url)
eq$last_price[i] <- unlist(dat$result)[7]
eq$date_time <- Sys.time()
Sys.sleep(3)
print(i)
}
# Extract as a csv
write.table(eq, file = paste0(path, "equity_report.csv"), append = T,
row.names = F, sep = ",")
# Report path
path <- "/media/chris/DATA/Documents/Bot_Trading/equity_report/"
# Get your balance in coins
equity <- get_balance(url = "https://api.kraken.com/0/private/Balance",
key = API_Key,
secret = API_Sign)
eq <- data.frame(balance = unlist(equity$result))
eq$coin <- rownames(eq)
rownames(eq) <- NULL
# remove currencies
currency <- c("ZEUR", "CHF", "USDT")
eq <- eq[!eq$coin %in% currency, ]
eq$pair <- NA
eq$last_price <- NA
eq$date_time <- NA
# Match coins to euro pairs to get equity
avail_pairs <- myfun("https://api.kraken.com/0/public/AssetPairs", secret = API_Sign, key = API_Key)
avail_pairs <- names(avail_pairs$result)
# Get the official ticker
for(i in 1:nrow(eq)){
eq$pair[i] <- grep("EUR", grep(eq$coin[i], avail_pairs, value = T), value = T)[1]
}
# Get last trade price for each ticker
for (i in 1:length(eq$pair)){
url <- paste0('https://api.kraken.com/0/public/Ticker?pair=', eq$pair[i])
dat <- jsonlite::fromJSON(url)
eq$last_price[i] <- unlist(dat$result)[7]
eq$date_time <- Sys.time()
Sys.sleep(3)
print(i)
}
# Extract as a csv
write.table(eq, file = paste0(path, "equity_report.csv"), append = T,
row.names = F, sep = ",")
